{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }


	// Recuerda Que Los Snippets Se Guardan En La Siguiente Direccion

	// C:\Users\Usuario\AppData\Roaming\Code\User\snippets


	
	//********************************************************************************************************************************************************************
	//********************************************************************************************************************************************************************
	//********************************        ****            ****            ********************************************************************************************
	//********************************        ****            ****            ********************************************************************************************
	//********************************    ********    ****    ****    ****    ********************************************************************************************
	//********************************    ********    ****    ****    ****    ********************************************************************************************
	//********************************    ********    ****    ****    ****    ********************************************************************************************
	//********************************    ********            ****            ********************************************************************************************
	//********************************    ********            ****            ********************************************************************************************
	//********************************    ********    ************    ****************************************************************************************************
	//********************************        ****    ************    ****************************************************************************************************
	//********************************        ****    ************    ****************************************************************************************************
	//********************************************************************************************************************************************************************
	//********************************************************************************************************************************************************************

	"Rafstermancppinit":{
		"prefix": "cppinit",
		"body": [
			"// @The-Master",
			"",
			"#include <iostream>",
			"#include <stdio.h>",
			"#include <windows.h>",
			"#include <conio.h>",
			"",
			"int main(){",
			"",
			"    $1",
			"",
			"system(\"pause\");",
			"return 0;",
			"}"
		],
		"description": "inicializa el cuerpo para un proyecto nuevo en CPP",
		"scope": "cpp"
	},

	"Rafstermancppcrudmysql":{
		"prefix": "cppcrudmysql",
		 "body": [
			"// @The-Master",
			"",
			"#include <iostream>",
			"#include <stdio.h>",
			"#include <windows.h>",
			"#include <conio.h>",
			"#include <mysql.h>",
			"using namespace std;",
			"",
			"MYSQL *conn;",
			"MYSQL_ROW row;",

			"int main(){",
			"",
			"",
			"",
			"system(\"pause\");",
			"return 0;",
			"}"
		 ],
		 "description": "Inicializa un crud en mysql en cpp",
		 "scope": "cpp"
	},

	"Rafstermancppconectionmysql":{
		"prefix": "cppconectionmysql",
		 "body": [
			"// @The-Master",
			"",
			"#include <iostream>",
			"#include <stdio.h>",
			"#include <windows.h>",
			"#include <conio.h>",
			"#include <mysql.h>",
			"using namespace std;",
			"",
			"MYSQL *conn;",
			"MYSQL_ROW row;",

			"int main(){",
			"",
			"",
			"",
			"system(\"pause\");",
			"return 0;",
			"}"
		 ],
		 "description": "Inicializa un crud en mysql en cpp",
		 "scope": "cpp"
	},

	"Rafstermancppcreatemysql":{
		"prefix": "cppcreatemysql",
		 "body": [
			"// @The-Master",
			"",
			"#include <iostream>",
			"#include <stdio.h>",
			"#include <windows.h>",
			"#include <conio.h>",
			"#include <mysql.h>",
			"using namespace std;",
			"",
			"MYSQL *conn;",
			"MYSQL_ROW row;",

			"int main(){",
			"",
			"",
			"",
			"system(\"pause\");",
			"return 0;",
			"}"
		 ],
		 "description": "Inicializa un crud en mysql en cpp",
		 "scope": "cpp"
	},

	"Rafstermancppcrudsqlserver":{
		"prefix": "cppcrudsqlserver",
		"body": [
			"// @The-Master",
			"",
			"",
		],
		"description": "Inicializa un crud en sqlserver en cpp",
		"scope": "cpp"
	},

	"Rafstermancppcrudmongodb":{
		"prefix": "cppcrudmongodb",
		"body": [
			"// @The-Master",
			"",
			"",
		],
		"description": "Inicializa un crud en mongodb en cpp",
		"scope": "cpp"
	},

	"Rafstermancppcrudpersistence":{
		"prefix": "cppcrudpersistence",
		"body": [
			"// @The-Master",
			"",
			"",
		],
		"description": "",
		"scope": "cpp"
	},

	"Rafstermancppradixshort":{
		"prefix": "cppradixshort",
		"body": [
			"// @The-Master",
			"",
			"",
		],
		"description": "",
		"scope": "cpp,ino"
	},

	"Rafstermancppinsertionshort":{
		"prefix": "cppinsertionshort",
		"body": [
			"// @The-Master",
			"",
			"",
		],
		"description": "",
		"scope": "cpp,ino"
	},

	"Rafstermancppselectionshort":{
		"prefix": "cppselectionshort",
		"body": [
			"// @The-Master",
			"",
			"",
		],
		"description": "",
		"scope": "cpp,ino"
	},

	"Rafstermancppbubbleshort":{
		"prefix": "cppbubbleshort",
		"body": [
			"void bubbleSort(int arr[]){",
			"    for(int i = 0; i < (sizeof(arr)/sizeof(arr[0])) - 1; i++){",
			"        for (j = 0; j < (sizeof(arr)/sizeof(arr[0])) - i - 1; j++){",
			"            if (arr[j] > arr[j + 1]){",
			"                swap(arr[j], arr[j + 1]);",
			"            }",
			"        }",
			"    }",
			"}"
		],
		"description": "Metodo De Ordenamiento Bubblesort",
		"scope": "cpp,ino"
	},
	
	"Rafstermancppmarge":{
		"prefix": "cppmargeshort",
		"body": [
			"// @The-Master",
			"",
			"",
		],
		"description": "",
		"scope": "cpp,ino"
	},

	"Rafstermancppquickshort":{
		"prefix": "cppquickshort",
		"body": [
			"// @The-Master",
			"",
			"",
		],
		"description": "",
		"scope": "cpp,ino"
	},

	"Rafstermancppcountingshort":{
		"prefix": "cppcountingshort",
		"body": [
			"// @The-Master",
			"",
			"",
		],
		"description": "",
		"scope": "cpp,ino"
	},

	"Rafstermancppfilewrite":{
		"prefix": "cppfilewrite",
		"body": [
			"// @The-Master",
			"",
			"",
		],
		"description": "",
		"scope": "cpp,ino"
	},

	"Rafstermancppfileread":{
		"prefix": "cppfileread",
		"body": [
			"$1#include <fstream>",
			"$1#include <iostream>",
			"",
			"std::fstream archivo;",
			"std::string directorio=usuario.c_str();",
			"archivo.open(directorio+\".txt\",std::ios::in);",
			"if (archivo.fail()){",
			"    $2",
			"}",
			"archivo.close();",
		],
		"description": "",
		"scope": "cpp,ino"
	},

	//********************************************************************************************************************************************************************
	//********************************************************************************************************************************************************************
	//*****************            ****            ****    *******    ****            ************************************************************************************
	//*****************            ****            ****    *******    ****            ************************************************************************************
	//*********************    ********    ****    *****    *****    *****    ****    ************************************************************************************
	//*********************    ********    ****    *****    *****    *****    ****    ************************************************************************************
	//*********************    ********    ****    ******    ***    ******    ****    ************************************************************************************
	//*********************    ********            ******    ***    ******            ************************************************************************************
	//*********************    ********    ****    *******    *    *******    ****    ************************************************************************************
	//*********************    ********    ****    *******    *    *******    ****    ************************************************************************************
	//*****************        ********    ****    ********       ********    ****    ************************************************************************************
	//*****************        ********    ****    ********       ********    ****    ************************************************************************************
	//********************************************************************************************************************************************************************
	//********************************************************************************************************************************************************************

	"Rafstermanjavainit":{
		"prefix": "javainit",
		"body": [
			"// @The-Master",
			"",
			"System.out.println(\"${1:hola}\");",
		],
		"description": "",
		"scope": "java"
	},

	"Rafstermanjavacrudmysql":{
		"prefix": "javacrudmysql",
		"body": [
			"// @The-Master",
			"",
			"",
		],
		"description": "",
		"scope": "java"
	},

	"Rafstermanjavacrudsqlserver":{
		"prefix": "javacrudsqlserver",
		"body": [
			"// @The-Master",
			"",
			"",
		],
		"description": "",
		"scope": "java"
	},

	"Rafstermanjavacrudmongodb":{
		"prefix": "javacrudmongodb",
		"body": [
			"// @The-Master",
			"",
			"",
		],
		"description": "",
		"scope": "java"
	},

	"Rafstermanjavacrudpersistence":{
		"prefix": "javacrudpersistence",
		"body": [
			"// @The-Master",
			"",
			"",
		],
		"description": "",
		"scope": "java"
	},

	"Rafstermanjavaradixshort":{
		"prefix": "javaradixshort",
		"body": [
			"// @The-Master",
			"",
			"",
		],
		"description": "",
		"scope": "java"
	},

	"Rafstermanjavainsertionshort":{
		"prefix": "javainsertionshort",
		"body": [
			"// @The-Master",
			"",
			"",
		],
		"description": "",
		"scope": "java"
	},

	"Rafstermanjavaselectionshort":{
		"prefix": "javaselectionshort",
		"body": [
			"// @The-Master",
			"",
			"",
		],
		"description": "",
		"scope": "java"
	},

	"Rafstermanjavabubbleshort":{
		"prefix": "javabubbleshort",
		"body": [
			"static void bubbleSort(int arr[]){",
			"int temp;",
			"for (i = 0; i < arr.length - 1; i++) {",
			"    for (j = 0; j < arr.length - i - 1; j++) {",
			"        if (arr[j] > arr[j + 1]) {",
			"            temp = arr[j];",
			"            arr[j] = arr[j + 1];",
			"            arr[j + 1] = temp;",
			"        }",
			"    }",
			"}",
		],
		"description": "",
		"scope": "java"
	},
	
	"Rafstermanjavamarge":{
		"prefix": "javamargeshort",
		"body": [
			"// @The-Master",
			"",
			"",
		],
		"description": "",
		"scope": "java"
	},

	"Rafstermanjavaquickshort":{
		"prefix": "javaquickshort",
		"body": [
			"// @The-Master",
			"",
			"",
		],
		"description": "",
		"scope": "java"
	},

	"Rafstermanjavacountingshort":{
		"prefix": "javacountingshort",
		"body": [
			"// @The-Master",
			"",
			"",
		],
		"description": "",
		"scope": "java"
	},

	"Rafstermanjavafilewrite":{
		"prefix": "javafilewrite",
		"body": [
			"// @The-Master",
			"",
			"",
		],
		"description": "",
		"scope": "java"
	},

	"Rafstermanjavafileread":{
		"prefix": "javafileread",
		"body": [
			"// @The-Master",
			"",
			"",
		],
		"description": "",
		"scope": "java"
	},

	//********************************************************************************************************************************************************************
	//********************************************************************************************************************************************************************
	//****            ****            ****    *******    ****            ****            ****        ****            *****            ****            ****            ****
	//****            ****            ****    *******    ****            ****            ****        ****            *****            ****            ****            ****
	//********    ********    ****    *****    *****    *****    ****    ****    ************    ********    ****    *********    ********    ****    ********    ********
	//********    ********    ****    *****    *****    *****    ****    ****    ************    ********    ****    *********    ********    ****    ********    ********
	//********    ********    ****    ******    ***    ******    ****    ****            ****    ********    ****    *********    ********    ****    ********    ********
	//********    ********            ******    ***    ******            ****            ****    ********            *********    ********            ********    ********
	//********    ********    ****    *******    *    *******    ****    ************    ****    ********            *********    ********            ********    ********
	//********    ********    ****    *******    *    *******    ****    ************    ****    ********    ******     ******    ********    ****************    ********
	//****        ********    ****    ********       ********    ****    ****            ****        ****    *******    **            ****    ****************    ********
	//****        ********    ****    ********       ********    ****    ****            ****        ****    *******    **            ****    ****************    ********
	//********************************************************************************************************************************************************************
	//********************************************************************************************************************************************************************

	"Rafstermanjavascriptinitapp":{
		"prefix": "javascriptinitapp",
		"body": [
			"// @The-Master",
			"",
			"require('dotenv').config(); //Creo que ni se usa aqui xd",
			"",
			"const Server=require('./models/server');",
			"",
			"const server = new Server();",
			"",
			"server.listen();"
		],
		"description": "Inicializa la app que se encuentra en la carpeta raiz",
		"scope": "javascript"
	},

	"Rafstermanjavascriptinitserver":{
		"prefix": "javascriptinitserver",
		"body": [
			"// @The-Master",
			"",
			"//configuraciones del servidor",
			"",
			"let express = require(\"express\");",
			"let Sha1=require('sha1');",
			"let session=require('express-session');",
			"let cookieParser=require('cookie-parser');",
			"let Conexion=require(\"./conexion\");",
			"let conexion=new Conexion();",
			"",
			"require('dotenv').config();",
			"",
			"",
			"class Server{    //Inicia La Clase Server",
			"        constructor(){",
			"        this.app=express();",
			"        this.port=process.env.PORT;",
			"        this.middlewares();",
			"        this.routes();",
			"    }",
			"",
			"    middlewares(){",
			"        this.app.use(express.static('public'));",
			"        this.app.set('view engine', 'ejs');",
			"        this.app.use(express.static(__dirname + '/public'));",
			"        this.app.use(cookieParser());",
			"        this.app.use(session({",
			"            secret:\"amarte\",",
			"            saveUninitialized:true,",
			"            resave:true",
			"        }));",
			"    }",
			"",
			"    routes(){",
			"        this.app.get('',(req,res)=>{    // Inicia La Ruta Ejemplo1",
			"            res.render('');",
			"        });    // Termina La Ruta Ejemplo1",
			"",
			"        this.app.get('',(req,res)=>{    // Inicia La Ruta Ejemplo2",
			"            if(req.session.user){",
			"                res.render('');",
			"            }else{res.render('');}",
			"        });    // Termina La Ruta Ejemplo2",
			"",
			"        this.app.get('',(req,res)=>{    // Inicia La Ruta Ejemplo3",
			"            if(req.session.user){",
			"                let x;",
			"                let pass=req.session.user.psw;",
			"                let usr=req.session.user.usr;",
			"                pass=Sha1(pass);",
			"                usr=Sha1(usr);",
			"                let conn=conexion.conexio();    // Abre Conexion NO OLVIDAR CERRAR LA CONEXION!!!",
			"",
			"                if(x!=null){",
			"                    let user={",
			"                        ide:x.ide,",
			"                        usr:x.usr,",
			"                        psw:x.psw",
			"                    };",
			"                    req.session.user=user;",
			"                    req.session.save();",
			"                    res.render('');",
			"                }else{res.redirect();}",
			"            }else{res.render('');}",
			"        });    // Termina La Ruta Ejemplo3",
			"",
			"        this.app.get('/login',(req,res)=>{// Inicia La Ruta login",
			"           let usuar=req.query.username;",
			"           let passw=req.query.password;",
			"",
			"           if(usuar!=null && passw!=null){",
			"               let user={",
			"                   usr:usuar,",
			"                   psw:passw",
			"               };",
			"",
			"               req.session.user=user;",
			"               req.session.save();",
			"               res.redirect('/perfil');",
			"           }else{res.render('login');}",
			"        });    //Termina La Ruta login",
			"    }    // Termina El Metodo routes",
			"",
			"    listen(){",
			"        this.app.listen(this.port,()=>{",
			"            console.log(\"https://127.0.0.1:\"+this.port);",
			"        });",
			"    }    // Termina El Metodo listen",
			"}    // Termina La Clase Server",
			"module.expoers=Server;"
],
		"description": "Inicia La Configuracion Del Archivo Server",
		"scope": "javascript"
	},

	"Rafstermanjavascriptmongocreate":{
		"prefix": "javascriptmongocreate",
		"body": [
			"let conn=conexion.conexion();",
			"try{",
			"    await conn.connect();",
			"    await conn.db().collection().insertOne({\"clave\":valor})",
			"}finally{",
			"    await conn.close();",
			"}",
		],
		"description": "",
		"scope": "javascript"
	},

	"Rafstermanjavascriptmongoread":{
		"prefix": "javascriptmongoread",
		"body": [
			"let conn=conexion.conexion();",
			"let x;",
			"try{",
			"    await conn.connect();",
			"    let read=await conn.db().collection().findOne({\"clave\":valor},{\"clave\":valor})",
			"    x=read;",
			"}finally{",
			"    await conn.close();",
			"}",
		],
		"description": "",
		"scope": "javascript"
	},

	"Rafstermanjavascriptmongoupdate":{
		"prefix": "javascriptmongoupdate",
		"body": [
			"let conn=conexion.conexion();",
			"try{",
			"    let command={}",
			"    await conn.connect();",
			"    await conn.db().collection().updateOne(command,{\"$set\":{\"clave\":valor}});",
			"}finally{",
			"    await conn.close();",
			"}",
		],
		"description": "",
		"scope": "javascript"
	},

	"Rafstermanjavascriptmongodelete":{
		"prefix": "javascriptmongodelete",
		"body": [
			"let conn=conexion.conexion();",
			"try{",
			"    let command={}",
			"    await conn.connect();",
			"    await conn.db().collection().deleteOne(command);",
			"}finally{",
			"    await conn.close();",
			"}",
		],
		"description": "",
		"scope": "javascript"
	},

	"Rafstermanjavascriptinitconexionmongodb":{
		"prefix": "javascriptinitconexionmongodb",
		"body": [
			"// @The-Master",
			"",
			"require('dotenv').config();",
			"const { MongoClient, ServerApiVersion } = require('mongodb');",
			"const uri =process.env.URI;",
			"",
			"class Conexion{",
			"    conexion(){",
			"        const client = new MongoClient(uri,{",
			"            serverApi:{",
			"                version: ServerApiVersion.v1,",
			"                strict:true,",
			"                deprecationErrors:true",
			"            }",
			"        });",
			"        return client;",
			"    }",
			"}",
			"module.export=Conexion;",
		],
		"description": "Crea La Configuracion Para Retornar La Conexion Entre Mongo Y JS",
		"scope": "javascript"
	},
	
	"Rafstermanjavascriptinitconexionmysql":{
		"prefix": "javascriptconexionmysql",
		"body": [
			"// @The-Master",
			"",
			"const mysql= require(\"mysql\");",
			"",
			"class Conexion{",
			"    constructor(){",
			"        this.dbdatabase=process.env.MYSQLDATABASE;",
			"        this.dbhost=process.env.MYSQLHOST;",
			"        this.dbpassword=process.env.MYSQLPASSWORD;",
			"        this.dbport=process.env.MYSQLPORT;",
			"        this.dbuser=process.env.MYSQLUSER;",
			"        this.dburl=process.env.MYSQL_URL;",
			"        this.result;",
			"    }",
			"",
			"    conexion(){",
        	"        let conn=mysql.createConnection({",
            "            user:this.dbuser,",
            "            password:this.dbpassword,",
            "            database:this.dbdatabase,",
            "            port:this.dbport,",
            "            host:this.dbhost",
			"        });",
			"        return conn;",
			"    }",
			"}",
			"module.exports=Conexion;"
		],
		"description": "",
		"scope": "javascript"
	},

	"Rafstermanjavascriptmysqlcreate":{
		"prefix": "javascriptmysqlcreate",
		"body": [
			"let conn=conexion.conexion();",
			"conn=connect(function(err){",
			"    if(err) throw err;",
			"    else{",
			"        let command=\"\";",
			"        conn.query(command,function(err){",
			"            if(err) throw err;",
			"            else{",
			"            }",
			"        });",
			"    }",
			"});"
		],
		"description": "",
		"scope": "javascript"
	},

	"Rafstermanjavascriptmysqlread":{
		"prefix": "javascriptmysqlread",
		"body": [
			"let conn=conexion.conexion();",
			"conn=connect(function(err){",
			"    if(err) throw err;",
			"    else{",
			"        let command=\"\";",
			"        conn.query(command,function(err,result){",
			"            if(err) throw err;",
			"        });",
			"    }",
			"});"
		],
		"description": "",
		"scope": "javascript"
	},

	"Rafstermanjavascriptmysqlupdate":{
		"prefix": "javascriptmysqlupdate",
		"body": [
			"let conn=conexion.conexion();",
			"conn.connect(function(err){",
			"    if(err) throw err;",
			"    else{",
			"        let command=\"'';\";",
			"        conn.query(command,function(err){",
			"            if(err) throw err;",
			"            else{",
			"            }",
			"        })",
			"    }",
			"});",
		],
		"description": "",
		"scope": "javascript"
	},

	"Rafstermanjavascriptmysqldelete":{
		"prefix": "javascriptmysqldelete",
		"body": [
			"let conn=conexion.conexion();",
			"conn.connect(function(err){",
			"    if(err) throw err;",
			"    else{",
			"        let command=\"'';\";",
			"        conn.query(command,function(err){",
			"            if(err) throw err;",
			"            else{",
			"            }",
			"        })",
			"    }",
			"});",
		],
		"description": "",
		"scope": "javascript"
	},

	"Rafstermanjavascriptcrudsqlserver":{
		"prefix": "javascriptcrudsqlserver",
		"body": [
			"// @The-Master",
			"",
			"",
		],
		"description": "",
		"scope": "javascript"
	},
	
	"Rafstermanjavascriptcrudpersistence":{
		"prefix": "javascriptcrudpersistence",
		"body": [
			"// @The-Master",
			"",
			"",
		],
		"description": "",
		"scope": "javascript"
	},

	"Rafstermanjavascriptradixshort":{
		"prefix": "javascriptradixshort",
		"body": [
			"// @The-Master",
			"",
			"",
		],
		"description": "",
		"scope": "javascript"
	},

	"Rafstermanjavascriptinsertionshort":{
		"prefix": "javascriptinsertionshort",
		"body": [
			"// @The-Master",
			"",
			"",
		],
		"description": "",
		"scope": "javascript"
	},

	"Rafstermanjavascriptselectionshort":{
		"prefix": "javascriptselectionshort",
		"body": [
			"// @The-Master",
			"",
			"",
		],
		"description": "",
		"scope": "javascript"
	},

	"Rafstermanjavascriptbubbleshort":{
		"prefix": "javascriptbubbleshort",
		"body": [
			"// @The-Master",
			"",
			"",
		],
		"description": "",
		"scope": "javascript"
	},
	
	"Rafstermanjavascriptmarge":{
		"prefix": "javascriptmargeshort",
		"body": [
			"// @The-Master",
			"",
			"",
		],
		"description": "",
		"scope": "javascript"
	},

	"Rafstermanjavascriptquickshort":{
		"prefix": "javascriptquickshort",
		"body": [
			"// @The-Master",
			"",
			"",
		],
		"description": "",
		"scope": "javascript"
	},

	"Rafstermanjavascriptcountingshort":{
		"prefix": "javascriptcountingshort",
		"body": [
			"// @The-Master",
			"",
			"",
		],
		"description": "",
		"scope": "javascript"
	},
	
	//********************************************************************************************************************************************************************
	//********************************************************************************************************************************************************************
	//********************    ****    ****            ****        *******        ****    *********************************************************************************
	//********************    ****    ****            ****        *******        ****    *********************************************************************************
	//********************    ****    ********    ********    *    *****    *    ****    *********************************************************************************
	//********************    ****    ********    ********    *    *****    *    ****    *********************************************************************************
	//********************            ********    ********    **    ***    **    ****    *********************************************************************************
	//********************            ********    ********    **    ***    **    ****    *********************************************************************************
	//********************    ****    ********    ********    ***    *    ***    ****    *********************************************************************************
	//********************    ****    ********    ********    ***    *    ***    ****    *********************************************************************************
	//********************    ****    ********    ********    ****       ****    ****        *****************************************************************************
	//********************    ****    ********    ********    ****       ****    ****        *****************************************************************************
	//********************************************************************************************************************************************************************
	//********************************************************************************************************************************************************************

	"Rafstermanhtmltemplate1":{
		"prefix": "htmltemplate1",
		"body": [
			"<!-- @The-Master -->",
			"<!DOCTYPE html>",
			"<html lang=\"en\">",
			"<head>",
			"    <meta charset=\"UTF-8\">",
			"    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">",
			"    <title>Sofweare A Medida</title>",
			"    <link rel=\"stylesheet\" href=\"./css/style.css\">",
			"</head>",
			"<body>",
			"    <header>",
			"        <h2 class=\"logo\">Software A Medida</h2>",
			"        <input type=\"checkbox\" id=\"check\">",
			"        <label for=\"check\" class=\"mostrar-menu\">&#8801</label>",
			"        <nav class=\"menu\">",
			"            <a href=\"#\">home</a>",
			"            <a href=\"#\">about me</a>",
			"            <a href=\"#\">blog</a>",
			"            <a href=\"#\"><img src=\"\" alt=\"facebook\"></a>",
			"            <a href=\"#\"><img src=\"\" alt=\"instagram\"></a>",
			"            <label for=\"check\" class=\"esconder-menu\">&#215</label>",
			"        </nav>",
			"    </header>",
			"    <section class=\"banner\">",
			"        <div class=\"contenido-bener\">",
			"            <h3 class=\"texto-banner\"><span>desarrollo de software: </span>webs, apps, desktop <br> en general</h3>",
			"            <a href=\"#\" class=\"boton-empezar\">empezar</a>",
			"        </div>",
			"    </section>",
			"    <section class=\"persona\">",
			"        <div>",
			"            <img src=\"https://2.bp.blogspot.com/-ldAbyujUy8M/V1emzJAWY0I/AAAAAAAAAuQ/F68N1ptNpJM2wb86ukf-onL-rzv2Z7paQCKgB/s1600/adorable-chaton-qui-a-sommeil.jpg\" alt=\"foto\">",
			"            <h3>Lorem ipsum dolor sit</h3>",
			"            <p>Lorem ipsum dolor, sit amet consectetur adipisicing elit. Quo, iure?</p>",
			"            <a href=\"#\" class=\"boton-empezar boton-enviar\">Saber mas...</a>",
			"        </div>",
			"        <div>",
			"            <img src=\"https://2.bp.blogspot.com/-ldAbyujUy8M/V1emzJAWY0I/AAAAAAAAAuQ/F68N1ptNpJM2wb86ukf-onL-rzv2Z7paQCKgB/s1600/adorable-chaton-qui-a-sommeil.jpg\" alt=\"foto\">",
			"            <h3>Lorem ipsum dolor sit</h3>",
			"            <p>Lorem ipsum dolor, sit amet consectetur adipisicing elit. Quos, repudiandae.</p>",
			"            <a href=\"#\" class=\"boton-empezar boton-enviar\">Saber mas...</a>",
			"        </div>",
			"    </section>",
			"    <footer>",
			"        <form action=\"\">",
			"            <div class=\"name\">",
			"                <label for=\"name\">Name</label>",
			"                <input type=\"text\" name=\"name\" id=\"name\"  placeholder=\"Name\" required>",
			"            </div>",
			"            <div class=\"email\">",
			"                <label for=\"mail\">Email address</label>",
			"                <input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Email\" required>",
			"            </div>",
			"            <div>",
			"                <label for=\"details\">Project details</label>",
			"                <input type=\"text\" name=\"details\" id=\"details\" placeholder=\"Project details\" required>",
			"            </div>",
			"            <div>",
			"                <input class=\"boton-empezar boton-enviar\" type=\"submit\" value=\"Let's do this\">",
			"            </div>",
			"        </form>",
			"    </footer>",
			"</body>",
			"</html>",
		],
		"description": "",
		"scope": "html , ejs"
	},

	"Rafstermanhtmltemplate2":{
		"prefix": "htmltemplate2",
		"body": [
			"<!-- @The-Master -->",
			"",
			"",
		],
		"description": "",
		"scope": "html , ejs"
	},

	"Rafstermanhtmltemplate3":{
		"prefix": "htmltemplate3",
		"body": [
			"<!-- @The-Master -->",
			"",
			"",
		],
		"description": "",
		"scope": "html , ejs"
	},

	"Rafstermanhtmltemplate4":{
		"prefix": "htmltemplate4",
		"body": [
			"<!-- @The-Master -->",
			"",
			"",
		],
		"description": "",
		"scope": "html , ejs"
	},

	"Rafstermanhtmltemplate5":{
		"prefix": "htmltemplate5",
		"body": [
			"<!-- @The-Master -->",
			"",
			"",
		],
		"description": "",
		"scope": "html , ejs"
	},

	"Rafstermanhtmltemplate6":{
		"prefix": "htmltemplate6",
		"body": [
			"<!-- @The-Master -->",
			"",
			"",
		],
		"description": "",
		"scope": "html , ejs"
	},

	"Rafstermanhtmltemplate7":{
		"prefix": "htmltemplate7",
		"body": [
			"<!-- @The-Master -->",
			"",
			"",
		],
		"description": "",
		"scope": "html , ejs"
	},

	"Rafstermanhtmltemplate8":{
		"prefix": "htmltemplate8",
		"body": [
			"<!-- @The-Master -->",
			"",
			"",
		],
		"description": "",
		"scope": "html , ejs"
	},

	//********************************************************************************************************************************************************************
	//********************************************************************************************************************************************************************
	//**********************************        ****            ****            ******************************************************************************************
	//**********************************        ****            ****            ******************************************************************************************
	//**********************************    ********    ************    **************************************************************************************************
	//**********************************    ********    ************    **************************************************************************************************
	//**********************************    ********            ****            ******************************************************************************************
	//**********************************    ********            ****            ******************************************************************************************
	//**********************************    ****************    ************    ******************************************************************************************
	//**********************************    ****************    ************    ******************************************************************************************
	//**********************************        ****            ****            ******************************************************************************************
	//**********************************        ****            ****            ******************************************************************************************
	//********************************************************************************************************************************************************************
	//********************************************************************************************************************************************************************


}